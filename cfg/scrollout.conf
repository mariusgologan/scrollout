upstream php-fpm {
	server	unix:/run/php/php7.0-fpm.sock;
	server	unix:/run/php/php7.0-fpm.sock backup;
}

# small DDoS protection based on source IP & UID cookie for sessions behind NAT
set_real_ip_from	92.168.1.0/24;
set_real_ip_from	10.0.0.0/8;
set_real_ip_from	172.16.0.0/12;
real_ip_header		X-Forwarded-For;

limit_req_zone	$binary_remote_addr$uid_got$request_uri	zone=one:5m rate=25r/s;
limit_conn_zone	$binary_remote_addr$uid_got				zone=addr:5m;

userid			on;
userid_name		sof_uid;
userid_domain	none;
userid_expires	off;
userid_path		/;
# end of DDoS protection

server {
 listen 80 default_server;
 listen [::]:80 default_server;
 return 301 https://$http_host$request_uri;
 etag on;
 limit_req zone=one burst=5 nodelay;
 limit_conn addr 5;

	if ( $http_cookie !~ "sof_uid=" ) {
		return 302 $scheme://$host/;
		set $uid_reset 0;
	}
}

server {
 listen 443 ssl http2 default_server;
 listen [::]:443 ssl http2 default_server;
 etag on;
 gzip on;
 gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
 
 limit_req zone=one burst=5 nodelay;
 limit_conn addr 10;

 ssl_certificate /etc/postfix/certs/scrollout.cert;
 ssl_certificate_key /etc/postfix/certs/scrollout.key;
 ssl_protocols TLSv1.2;
 ssl_prefer_server_ciphers on;
 ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED";

 
 root /var/www;
 
 # Add index.php to the list if you are using PHP
 index index.php index.html index.htm;

 server_name _;

	if ( $http_cookie !~ "sof_uid=" ) {
		return 302 $scheme://$host/;
		set $uid_reset 0;
	}

 location / {
 # First attempt to serve request as file, then
 # as directory, then fall back to displaying a 404.
 try_files $uri $uri/ =404;

 allow 192.168.0.0/16;
 allow 172.16.0.0/12;
 allow 10.0.0.0/8;

 # Uncomment the next line to limit access from Intranet only
 # deny all;

 auth_basic "Scrollout F1";
 auth_basic_user_file /var/www/.htpasswd;

	add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
	add_header imagetoolbar "no";
	# add_header Content-Security-Policy "frame-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; connect-src 'self'; object-src 'self'";
	add_header X-Content-Type-Options "nosniff";
	add_header X-Frame-Options "SAMEORIGIN";
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag "none";



	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~* \.php$ {
	include snippets/fastcgi-php.conf;
	fastcgi_param SOF_UID_GOT $uid_got;
    fastcgi_param SOF_UID_SET $uid_set;
	fastcgi_pass php-fpm;
	
	add_header Cache-Control "private, must-revalidate";
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
	add_header imagetoolbar "no";
	# add_header Content-Security-Policy "frame-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; connect-src 'self'; object-src 'self'";
	add_header X-Content-Type-Options "nosniff";
	add_header X-Frame-Options "SAMEORIGIN";
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag "none";
	}

	location ~* \.(?:htm|html|txt)$ {
		if (!-f $request_filename) {
			rewrite ^(.*)\.html$ $scheme://$http_host$1.php permanent;
		}
	add_header Cache-Control "private, must-revalidate";
	}

	location ~* \.cgi$ {
		include /etc/nginx/fastcgi_params;
		fastcgi_pass fcgiwrap;
		add_header Cache-Control "max-age=300, must-revalidate, private";
	}

	# CSS and Javascript
	location ~* \.(?:css|js)$ {
		add_header Cache-Control "max-age=86400, public";
	}
	
	location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|woff|woff2)$ {
		add_header Cache-Control "max-age=604800, public";
	}
	
	location ~* \.(?:eot|ttf|svg)$ {
		add_header Vary Accept-Encoding;
		add_header Cache-Control "max-age=604800, public";
	}
	

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~* /\.ht {
	deny all;
	}
 } # location /
} # server
